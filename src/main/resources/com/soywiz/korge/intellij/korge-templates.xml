<korge-templates>
	<versions>
		<version>1.5.0d</version>
		<version>1.4.3</version>
	</versions>
	<features>
		<feature id="core" dependencies="" name="Korge" description="Korge support" documentation="https://korlibs.soywiz.com/korge/" />
		<feature id="f3d" dependencies="core" name="3D Support" description="Korge 3D Support" documentation="https://korlibs.soywiz.com/korge/3d/" />
		<feature id="box2d" dependencies="core" name="Box-2D Support" description="Adds support for Box-2D" documentation="https://korlibs.soywiz.com/korge/physics/box2d/" />
		<feature id="dragonbones" dependencies="core" name="DragonBones Support" description="Adds support for DragonBones" documentation="https://korlibs.soywiz.com/korge/skeleton/dragonbones/" />
		<feature id="swf" dependencies="core" name="SWF Support" description="Adds support for Adobe Flash/Animate SWF files" documentation="https://korlibs.soywiz.com/korge/animation/swf/" />
	</features>
	<files>
		<file path="build.gradle"><![CDATA[
			buildscript {
				repositories {
					mavenLocal()
					maven { url = uri("https://dl.bintray.com/korlibs/korlibs") }
					maven { url = uri("https://plugins.gradle.org/m2/") }
					mavenCentral()
				}
				dependencies {
					classpath("com.soywiz.korlibs.korge.plugins:korge-gradle-plugin:${korgeVersion}")
				}

				apply plugin: "korge"

				korge {
					id = "${artifactGroup}.${artifactId}"
					#if ($feature_f3d)
					supportExperimental3d()
					#end
					#if ($feature_box2d)
					supportBox2d()
					#end
					#if ($feature_dragonbones)
					supportDragonbones()
					#end
					#if ($feature_swf)
					supportSwf()
					#end
				}
			}
		]]></file>
		<file path="settings.gradle"><![CDATA[
			enableFeaturePreview("GRADLE_METADATA")
		]]></file>
		<file path="gradle.properties"><![CDATA[
			org.gradle.jvmargs=-Xmx1536m
		]]></file>
		<file path="src/commonMain/kotlin/main.kt"><![CDATA[
			import com.soywiz.klock.seconds
			import com.soywiz.korge.*
			import com.soywiz.korge.tween.*
			import com.soywiz.korge.view.*
			import com.soywiz.korim.color.Colors
			import com.soywiz.korim.format.*
			import com.soywiz.korio.async.launchImmediately
			import com.soywiz.korio.file.std.*
			import com.soywiz.korma.geom.degrees
			import com.soywiz.korma.interpolation.Easing

			suspend fun main() = Korge(width = 512, height = 512, bgcolor = Colors["#2b2b2b"]) {
				val minDegrees = (-16).degrees
				val maxDegrees = (+16).degrees

				val image = image(resourcesVfs["korge.png"].readBitmap()) {
					rotation = maxDegrees
					anchor(.5, .5)
					scale(.8)
					position(256, 256)
				}

				launchImmediately {
					image.tween(image::rotation[minDegrees], time = 1.seconds, easing = Easing.EASE_IN_OUT)
					image.tween(image::rotation[maxDegrees], time = 1.seconds, easing = Easing.EASE_IN_OUT)
				}
			}
		]]></file>
	</files>
</korge-templates>